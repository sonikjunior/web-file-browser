openapi: 3.0.3

info:
  title: Web File Browser API
  version: 1.0.0

paths:
  /folder/content:
    post:
      tags:
        - folder
      summary: getContent
      description: Operation gets all children of directory
      operationId: getContent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentResponse'
        400:
          $ref: '#/components/responses/Error'
        404:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /archive/unzip:
    post:
      tags:
        - archive
      summary: unzipArchive
      description: Operation unzips archive
      operationId: unzipArchive
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
        400:
          $ref: '#/components/responses/Error'
        404:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

components:

  responses:

    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:

    FileRequest:
      type: object
      required:
        - path
      properties:
        path:
          $ref: '#/components/schemas/Path'

    FileResponse:
      description: File information
      type: object
      required:
        - path
        - name
        - type
      properties:
        path:
          $ref: '#/components/schemas/Path'
        name:
          description: Name
          type: string
          example: work
        type:
          description: Type
          type: string
          enum: [ file, folder, archive, picture, document ]
          example: directory

    Path:
      description: Absolute path
      type: string
      example: "Users/i.ivanov/Documents/work"

    ContentResponse:
      type: array
      items:
        $ref: '#/components/schemas/FileResponse'

    ErrorResponse:
      description: Error with message
      type: object
      required:
        - message
      properties:
        message:
          description: Message
          type: string
          example: File 'props' is not a dicrectory or archive
